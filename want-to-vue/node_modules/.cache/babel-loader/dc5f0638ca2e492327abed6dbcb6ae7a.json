{"remainingRequest":"G:\\caojinming\\12vueui\\Vue项目空白模板\\xz_admin_v2\\node_modules\\babel-loader\\lib\\index.js!G:\\caojinming\\12vueui\\Vue项目空白模板\\xz_admin_v2\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\caojinming\\12vueui\\Vue项目空白模板\\xz_admin_v2\\src\\components\\tabbar\\CartContainer.vue?vue&type=script&lang=js","dependencies":[{"path":"G:\\caojinming\\12vueui\\Vue项目空白模板\\xz_admin_v2\\src\\components\\tabbar\\CartContainer.vue","mtime":1536115540000},{"path":"G:\\caojinming\\12vueui\\Vue项目空白模板\\xz_admin_v2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534853418000},{"path":"G:\\caojinming\\12vueui\\Vue项目空白模板\\xz_admin_v2\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"G:\\caojinming\\12vueui\\Vue项目空白模板\\xz_admin_v2\\node_modules\\vue-loader\\lib\\index.js","mtime":1527860006000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Toast from 'mint-ui';\nexport default {\n  data: function data() {\n    return {\n      list: []\n    };\n  },\n  created: function created() {\n    this.getCartlist();\n  },\n  methods: {\n    getCartlist: function getCartlist() {\n      var _this = this;\n\n      var uid = 1;\n      this.$http.get(\"cartlist/list?uid=\" + uid).then(function (result) {\n        if (result.body.code == 1) {\n          _this.list = result.body.msg;\n        } else {\n          Toast(\"数据清求出错\");\n        }\n      });\n    },\n    //当前购物项数据加1\n    add: function add(id) {\n      //this.list[id-1].count+=1\n      //创建循环遍历数组内容\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.list[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var item = _step.value;\n\n          //判断如果当前购物项id与参数id相同\n          if (item.id == id) {\n            //当前购物项数量+1\n            item.count++;\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    },\n    minus: function minus(id) {\n      //this.list[id-1].count-=1\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = this.list[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var item = _step2.value;\n\n          if (item.id == id) {\n            if (item.count > 1) item.count--;\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n    }\n  },\n  computed: {\n    //添加计算属性\n    getsubtotal: function getsubtotal() {\n      var sum = 0;\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = this.list[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var item = _step3.value;\n          sum += item.price * item.count;\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      return sum;\n    }\n  }\n};",{"version":3,"sources":["CartContainer.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA,OAAA,KAAA,MAAA,SAAA;AACA,eAAA;AACA,MADA,kBACA;AACA,WAAA;AACA,YAAA;AADA,KAAA;AAGA,GALA;AAMA,SANA,qBAMA;AACA,SAAA,WAAA;AACA,GARA;AASA,WAAA;AACA,eADA,yBACA;AAAA;;AACA,UAAA,MAAA,CAAA;AACA,WAAA,KAAA,CAAA,GAAA,CAAA,uBAAA,GAAA,EACA,IADA,CACA,kBAAA;AACA,YAAA,OAAA,IAAA,CAAA,IAAA,IAAA,CAAA,EAAA;AACA,gBAAA,IAAA,GAAA,OAAA,IAAA,CAAA,GAAA;AACA,SAFA,MAEA;AACA,gBAAA,QAAA;AACA;AACA,OAPA;AAQA,KAXA;AAYA;AACA,OAbA,eAaA,EAbA,EAaA;AACA;AACA;AAFA;AAAA;AAAA;;AAAA;AAGA,6BAAA,KAAA,IAAA,8HAAA;AAAA,cAAA,IAAA;;AACA;AACA,cAAA,KAAA,EAAA,IAAA,EAAA,EAAA;AACA;AACA,iBAAA,KAAA;AACA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA,KAvBA;AAwBA,SAxBA,iBAwBA,EAxBA,EAwBA;AACA;AADA;AAAA;AAAA;;AAAA;AAEA,8BAAA,KAAA,IAAA,mIAAA;AAAA,cAAA,IAAA;;AACA,cAAA,KAAA,EAAA,IAAA,EAAA,EAAA;AACA,gBAAA,KAAA,KAAA,GAAA,CAAA,EACA,KAAA,KAAA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAhCA,GATA;AA2CA,YAAA;AACA;AACA,iBAAA,uBAAA;AACA,UAAA,MAAA,CAAA;AADA;AAAA;AAAA;;AAAA;AAEA,8BAAA,KAAA,IAAA,mIAAA;AAAA,cAAA,IAAA;AACA,iBAAA,KAAA,KAAA,GAAA,KAAA,KAAA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKA,aAAA,GAAA;AACA;AARA;AA3CA,CAAA","sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"mui-card\">\r\n      <div class=\"mui-card-content\">\r\n        <div class=\"mui-card-content-inner\">\r\n          <ul class=\"mui-table-view\">\r\n            <li class=\"mui-table-view-cell mui-media\" v-for=\"item in list\" :key=\"item.id\">\r\n              <a href=\"javascript:;\">\r\n                <img class=\"mui-media-object mui-pull-left\" src=\"#\">\r\n                <div class=\"mui-media-body\">\r\n                  商品:{{item.title}}\r\n                  <p class='mui-ellipsis'>\r\n                    <span class=\"price\">单价:{{item.price}}</span>\r\n                    <span class=\"count\">\r\n                      <div class=\"mui-numbox\">\r\n                        <button class=\"mui-btn mui-btn-numbox-minus\" type=\"button\" @click=\"minus(item.id)\">-</button>\r\n                        <input class=\"mui-input-numbox\" type=\"number\" :value=\"item.count\"/>\r\n                        <button class=\"mui-btn mui-btn-numbox-plus\" type=\"button\" @click=\"add(item.id)\">+</button>\r\n                      </div>\r\n                    </span>\r\n                  </p>\r\n                </div>\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <div class=\"mui-card-footer\">总计:{{\r\n      getsubtotal}}</div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\n  import Toast from 'mint-ui'\r\n  export default{\r\n    data(){\r\n      return {\r\n        list:[]\r\n      }\r\n    },\r\n    created(){\r\n      this.getCartlist()\r\n    },\r\n    methods:{\r\n      getCartlist(){\r\n        var uid=1;\r\n        this.$http.get(\"cartlist/list?uid=\"+uid)\r\n        .then(result=>{\r\n          if(result.body.code==1){\r\n            this.list=result.body.msg\r\n          }else{\r\n            Toast(\"数据清求出错\")\r\n          }\r\n        })\r\n      },\r\n      //当前购物项数据加1\r\n      add(id){\r\n        //this.list[id-1].count+=1\r\n        //创建循环遍历数组内容\r\n        for(var item of this.list){\r\n          //判断如果当前购物项id与参数id相同\r\n          if(item.id==id){\r\n            //当前购物项数量+1\r\n            item.count++;\r\n          }\r\n        }\r\n      },\r\n      minus(id){\r\n        //this.list[id-1].count-=1\r\n        for(var item of this.list){\r\n          if(item.id==id){\r\n            if(item.count>1)\r\n              item.count--;\r\n          }\r\n        }\r\n      }\r\n    },\r\n    computed:{\r\n      //添加计算属性\r\n      getsubtotal:function(){\r\n        var sum=0;\r\n        for(var item of this.list){\r\n          sum+=item.price*item.count\r\n        }\r\n        return sum;\r\n      }\r\n    }\r\n  }\r\n</script>\r\n<style>\r\n\r\n</style>"],"sourceRoot":"src\\components\\tabbar"}]}